from PIL import Image

# Set the size of the image
width = 1000
height = 1000

# Set the range of values for the x and y coordinates
xmin = -2
xmax = 1
ymin = -1
ymax = 1

# Create a new image object with the specified size and color mode
img = Image.new("RGB", (width, height), "white")

# Loop through each pixel in the image
for x in range(width):
    for y in range(height):
        # Calculate the corresponding complex number for the current pixel
        cx = xmin + (x / width) * (xmax - xmin)
        cy = ymin + (y / height) * (ymax - ymin)
        c = complex(cx, cy)

        # Initialize the iteration count and the complex number z
        z = 0
        n = 0

        # Iterate until the absolute value of z is greater than 2 or the maximum number of iterations is reached
        while abs(z) <= 2 and n < 255:
            z = z*z + c
            n += 1

        # Set the color of the current pixel based on the iteration count
        if n == 255:
            color = (0, 0, 0)
        else:
            color = (n, n, n)

        # Set the color of the current pixel in the image
        img.putpixel((x, y), color)

# Save the image to a file
img.save("mandelbrot.png")